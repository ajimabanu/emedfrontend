{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reactjs\\\\emedfrontend\\\\src\\\\components\\\\Drugtable1.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { MaterialReactTable } from 'material-react-table';\nimport { citiesList, data, usStateList } from '..//components/makeData.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Drugtable1 = () => {\n  _s();\n  const columns = useMemo(() => [{\n    header: 'Status',\n    accessorFn: originalRow => originalRow.isActive ? 'true' : 'false',\n    //must be strings\n    id: 'isActive',\n    filterVariant: 'checkbox',\n    Cell: _ref => {\n      let {\n        cell\n      } = _ref;\n      return cell.getValue() === 'true' ? 'Active' : 'Inactive';\n    },\n    size: 170\n  }, {\n    accessorKey: 'name',\n    header: 'Name',\n    filterVariant: 'text',\n    // default\n    size: 100\n  }, {\n    accessorKey: 'age',\n    header: 'Age',\n    filterVariant: 'range',\n    filterFn: 'between',\n    size: 80\n  }, {\n    accessorKey: 'salary',\n    header: 'Salary',\n    Cell: _ref2 => {\n      let {\n        cell\n      } = _ref2;\n      return cell.getValue().toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      });\n    },\n    filterVariant: 'range-slider',\n    filterFn: 'betweenInclusive',\n    // default (or between)\n    muiTableHeadCellFilterSliderProps: {\n      marks: true,\n      max: 200000,\n      //custom max (as opposed to faceted max)\n      min: 30000,\n      //custom min (as opposed to faceted min)\n      step: 10000,\n      valueLabelFormat: value => value.toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      })\n    }\n  }, {\n    accessorKey: 'city',\n    header: 'City',\n    filterVariant: 'select',\n    filterSelectOptions: citiesList //custom options list (as opposed to faceted list)\n  }, {\n    accessorKey: 'state',\n    header: 'State',\n    filterVariant: 'multi-select',\n    filterSelectOptions: usStateList //custom options list (as opposed to faceted list)\n  }], []);\n  return /*#__PURE__*/_jsxDEV(MaterialReactTable, {\n    columns: columns,\n    data: data,\n    initialState: {\n      showColumnFilters: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Drugtable1, \"erkfbBpUuAY09jdvhSOqc0XsEHQ=\");\n_c = Drugtable1;\nexport default Drugtable1;\nvar _c;\n$RefreshReg$(_c, \"Drugtable1\");","map":{"version":3,"names":["React","useMemo","MaterialReactTable","citiesList","data","usStateList","jsxDEV","_jsxDEV","Drugtable1","_s","columns","header","accessorFn","originalRow","isActive","id","filterVariant","Cell","_ref","cell","getValue","size","accessorKey","filterFn","_ref2","toLocaleString","style","currency","muiTableHeadCellFilterSliderProps","marks","max","min","step","valueLabelFormat","value","filterSelectOptions","initialState","showColumnFilters","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Reactjs/emedfrontend/src/components/Drugtable1.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { citiesList, data, usStateList } from '..//components/makeData.ts';\r\n\r\nconst Drugtable1 = () => {\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        header: 'Status',\r\n        accessorFn: (originalRow) => (originalRow.isActive ? 'true' : 'false'), //must be strings\r\n        id: 'isActive',\r\n        filterVariant: 'checkbox',\r\n        Cell: ({ cell }) =>\r\n          cell.getValue() === 'true' ? 'Active' : 'Inactive',\r\n        size: 170,\r\n      },\r\n      {\r\n        accessorKey: 'name',\r\n        header: 'Name',\r\n        filterVariant: 'text', // default\r\n        size: 100,\r\n      },\r\n      {\r\n        accessorKey: 'age',\r\n        header: 'Age',\r\n        filterVariant: 'range',\r\n        filterFn: 'between',\r\n        size: 80,\r\n      },\r\n      {\r\n        accessorKey: 'salary',\r\n        header: 'Salary',\r\n        Cell: ({ cell }) =>\r\n          cell.getValue().toLocaleString('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n          }),\r\n        filterVariant: 'range-slider',\r\n        filterFn: 'betweenInclusive', // default (or between)\r\n        muiTableHeadCellFilterSliderProps: {\r\n          marks: true,\r\n          max: 200_000, //custom max (as opposed to faceted max)\r\n          min: 30_000, //custom min (as opposed to faceted min)\r\n          step: 10_000,\r\n          valueLabelFormat: (value) =>\r\n            value.toLocaleString('en-US', {\r\n              style: 'currency',\r\n              currency: 'USD',\r\n            }),\r\n        },\r\n      },\r\n      {\r\n        accessorKey: 'city',\r\n        header: 'City',\r\n        filterVariant: 'select',\r\n        filterSelectOptions: citiesList, //custom options list (as opposed to faceted list)\r\n      },\r\n      {\r\n        accessorKey: 'state',\r\n        header: 'State',\r\n        filterVariant: 'multi-select',\r\n        filterSelectOptions: usStateList, //custom options list (as opposed to faceted list)\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <MaterialReactTable\r\n      columns={columns}\r\n      data={data}\r\n      initialState={{ showColumnFilters: true }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Drugtable1;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,UAAU,EAAEC,IAAI,EAAEC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,OAAO,GAAGT,OAAO,CACrB,MAAM,CACJ;IACEU,MAAM,EAAE,QAAQ;IAChBC,UAAU,EAAGC,WAAW,IAAMA,WAAW,CAACC,QAAQ,GAAG,MAAM,GAAG,OAAQ;IAAE;IACxEC,EAAE,EAAE,UAAU;IACdC,aAAa,EAAE,UAAU;IACzBC,IAAI,EAAEC,IAAA;MAAA,IAAC;QAAEC;MAAK,CAAC,GAAAD,IAAA;MAAA,OACbC,IAAI,CAACC,QAAQ,CAAC,CAAC,KAAK,MAAM,GAAG,QAAQ,GAAG,UAAU;IAAA;IACpDC,IAAI,EAAE;EACR,CAAC,EACD;IACEC,WAAW,EAAE,MAAM;IACnBX,MAAM,EAAE,MAAM;IACdK,aAAa,EAAE,MAAM;IAAE;IACvBK,IAAI,EAAE;EACR,CAAC,EACD;IACEC,WAAW,EAAE,KAAK;IAClBX,MAAM,EAAE,KAAK;IACbK,aAAa,EAAE,OAAO;IACtBO,QAAQ,EAAE,SAAS;IACnBF,IAAI,EAAE;EACR,CAAC,EACD;IACEC,WAAW,EAAE,QAAQ;IACrBX,MAAM,EAAE,QAAQ;IAChBM,IAAI,EAAEO,KAAA;MAAA,IAAC;QAAEL;MAAK,CAAC,GAAAK,KAAA;MAAA,OACbL,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACK,cAAc,CAAC,OAAO,EAAE;QACtCC,KAAK,EAAE,UAAU;QACjBC,QAAQ,EAAE;MACZ,CAAC,CAAC;IAAA;IACJX,aAAa,EAAE,cAAc;IAC7BO,QAAQ,EAAE,kBAAkB;IAAE;IAC9BK,iCAAiC,EAAE;MACjCC,KAAK,EAAE,IAAI;MACXC,GAAG,EAAE,MAAO;MAAE;MACdC,GAAG,EAAE,KAAM;MAAE;MACbC,IAAI,EAAE,KAAM;MACZC,gBAAgB,EAAGC,KAAK,IACtBA,KAAK,CAACT,cAAc,CAAC,OAAO,EAAE;QAC5BC,KAAK,EAAE,UAAU;QACjBC,QAAQ,EAAE;MACZ,CAAC;IACL;EACF,CAAC,EACD;IACEL,WAAW,EAAE,MAAM;IACnBX,MAAM,EAAE,MAAM;IACdK,aAAa,EAAE,QAAQ;IACvBmB,mBAAmB,EAAEhC,UAAU,CAAE;EACnC,CAAC,EACD;IACEmB,WAAW,EAAE,OAAO;IACpBX,MAAM,EAAE,OAAO;IACfK,aAAa,EAAE,cAAc;IAC7BmB,mBAAmB,EAAE9B,WAAW,CAAE;EACpC,CAAC,CACF,EACD,EACF,CAAC;EAED,oBACEE,OAAA,CAACL,kBAAkB;IACjBQ,OAAO,EAAEA,OAAQ;IACjBN,IAAI,EAAEA,IAAK;IACXgC,YAAY,EAAE;MAAEC,iBAAiB,EAAE;IAAK;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEN,CAAC;AAAChC,EAAA,CAtEID,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAwEhB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}