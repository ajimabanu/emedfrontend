{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reactjs\\\\emedfrontend\\\\src\\\\components\\\\Chapternotes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chapternotes = () => {\n  _s();\n  const [results, setResults] = useState(null);\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        if (global.values && global.values.code && global.years) {\n          const response = await fetch(`/codes/${global.values.code}/details/?version=${global.years}`);\n          if (response.ok) {\n            const data = await response.json();\n            setResults(data);\n          } else {\n            console.error(\"Failed to fetch data\");\n          }\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    fetchBooks();\n  }, [global.values.code]);\n  console.log(\"our result is\", results);\n  const shouldDisplayClassification = (classification, index) => {\n    if (index === 0) {\n      return true;\n    }\n    const previousClassifications = results.chapter.notes.slice(0, index).map(note => note.classification);\n    return !previousClassifications.includes(classification);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"50px\"\n      },\n      children: [results && results.chapter && results.chapter.description ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"17px\"\n          },\n          children: results.chapter.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }, this)\n      }, results.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 3\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 3\n      }, this), results && results.chapter && results.chapter.notes ? results.chapter.notes.sort((a, b) => a.classification.localeCompare(b.classification)).map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: index === 0 || note.classification !== results.chapter.notes[index - 1].classification ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"10px 20px 20px 20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: note.classification.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), \":\\xA0\\xA0\", note.notes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"110px\"\n          },\n          children: note.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No chapter notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Chapternotes, \"N7B/+eHsLT/dzJhUTI5eoU5ZVqM=\");\n_c = Chapternotes;\nexport default Chapternotes;\nvar _c;\n$RefreshReg$(_c, \"Chapternotes\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Chapternotes","_s","results","setResults","fetchBooks","global","values","code","years","response","fetch","ok","data","json","console","error","log","shouldDisplayClassification","classification","index","previousClassifications","chapter","notes","slice","map","note","includes","children","style","marginTop","description","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","sort","a","b","localeCompare","padding","toUpperCase","_c","$RefreshReg$"],"sources":["D:/Reactjs/emedfrontend/src/components/Chapternotes.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\nconst Chapternotes = () => {\r\n  const [results, setResults] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        if (global.values && global.values.code && global.years) {\r\n          const response = await fetch(`/codes/${global.values.code}/details/?version=${global.years}`);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setResults(data);\r\n          } else {\r\n            console.error(\"Failed to fetch data\");\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n    fetchBooks();\r\n  }, [global.values.code]);\r\n\r\n  console.log(\"our result is\", results);\r\n  const shouldDisplayClassification = (classification, index) => {\r\n    if (index === 0) {\r\n      return true;\r\n    }\r\n    const previousClassifications = results.chapter.notes\r\n      .slice(0, index)\r\n      .map((note) => note.classification);\r\n    return !previousClassifications.includes(classification);\r\n  };\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          marginTop: \"50px\",\r\n        }}\r\n      >\r\n     \r\n            {results && results.chapter && results.chapter.description ? (\r\n  <div key={results.code}>\r\n    <div style={{ marginLeft: \"17px\" }}>{results.chapter.description}</div>\r\n  </div>\r\n) : (\r\n  <div></div>\r\n)}\r\n        \r\n     \r\n            {results && results.chapter && results.chapter.notes ? (\r\n  results.chapter.notes\r\n    .sort((a, b) => a.classification.localeCompare(b.classification))\r\n    .map((note, index) => (\r\n      <div key={index}>\r\n        {index === 0 ||\r\n        note.classification !== results.chapter.notes[index - 1].classification ? (\r\n          <div style={{ padding: \"10px 20px 20px 20px\" }}>\r\n            <strong>{note.classification.toUpperCase()}</strong>:&nbsp;&nbsp;\r\n            {note.notes}\r\n          </div>\r\n        ) : (\r\n          <div style={{ marginLeft: \"110px\" }}>{note.notes}</div>\r\n        )}\r\n      </div>\r\n    ))\r\n) : (\r\n  <div>No chapter notes</div>\r\n)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chapternotes;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}