{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reactjs\\\\emedfrontend\\\\src\\\\components\\\\IndexTables.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from 'react';\nimport \"../styles/Pagination.css\";\nimport { Autocomplete, Box, TextField } from '@mui/material';\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst IndexTables = () => {\n  _s();\n  const items = [\"0-9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n  const [selectedAlphabet, setSelectedAlphabet] = useState(null);\n  const handleClick = alphabet => {\n    setSelectedAlphabet(alphabet);\n    console.log(\"Selected alphabet:\", alphabet);\n    global.alphabets = alphabet;\n    console.log(global.alphabets);\n  };\n  const [result, setResult] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [first, setFirst] = useState(\"\");\n  const [word, setWord] = useState(\"\");\n  const [isValueSelected, setIsValueSelected] = useState(false);\n  function handleChange(e) {\n    setWord(e.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => handleClick(item),\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        id: \"users\",\n        defaultValue: null,\n        getOptionLabel: result => `${result.id} ${result.description}`,\n        options: result,\n        sx: {\n          width: \"140px\",\n          backgroundColor: \"white\",\n          mt: \"14px\",\n          ml: \"4px\",\n          display: \"inline-block\",\n          \"& input\": {\n            height: \"5px\",\n            bgcolor: \"background.paper\",\n            color: theme => theme.palette.getContrastText(theme.palette.background.paper)\n          }\n        },\n        isoptionequalToValue: (option, value) => option.description === value.description,\n        noOptionsText: \"PLEASE ENTER VALID CODES\",\n        open: open,\n        onInputChange: (_, value) => {\n          if (value.length === 0) {\n            if (open) setOpen(false);\n          } else {\n            if (!open) setOpen(true);\n          }\n        },\n        onClose: () => setOpen(false),\n        popupIcon: /*#__PURE__*/_jsxDEV(SearchIcon, {\n          sx: {\n            marginLeft: \"60px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this),\n        onChange: (event, newValue) => {\n          setFirst(newValue);\n          setIsValueSelected(true);\n        },\n        autoSelect: true,\n        renderOption: (props, result) => /*#__PURE__*/_createElement(Box, {\n          ...props,\n          key: result.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }\n        }, result.id, \" \", result.description),\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          onChange: handleChange,\n          placeholder: \"filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(IndexTables, \"MOg9A+0Vwnvf3wSAmbEIBqGXn+I=\");\n_c = IndexTables;\nexport default IndexTables;\nvar _c;\n$RefreshReg$(_c, \"IndexTables\");","map":{"version":3,"names":["React","Fragment","useState","Autocomplete","Box","TextField","SearchIcon","jsxDEV","_jsxDEV","createElement","_createElement","IndexTables","_s","items","selectedAlphabet","setSelectedAlphabet","handleClick","alphabet","console","log","global","alphabets","result","setResult","open","setOpen","first","setFirst","word","setWord","isValueSelected","setIsValueSelected","handleChange","e","target","value","children","className","map","item","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","defaultValue","getOptionLabel","description","options","sx","width","backgroundColor","mt","ml","display","height","bgcolor","color","theme","palette","getContrastText","background","paper","isoptionequalToValue","option","noOptionsText","onInputChange","_","length","onClose","popupIcon","marginLeft","onChange","event","newValue","autoSelect","renderOption","props","key","__self","__source","renderInput","params","placeholder","_c","$RefreshReg$"],"sources":["D:/Reactjs/emedfrontend/src/components/IndexTables.js"],"sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport \"../styles/Pagination.css\";\r\nimport { Autocomplete, Box, TextField } from '@mui/material';\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst IndexTables = () => {\r\n    const items = [\r\n        \"0-9\",\r\n        \"A\",\r\n        \"B\",\r\n        \"C\",\r\n        \"D\",\r\n        \"E\",\r\n        \"F\",\r\n        \"G\",\r\n        \"H\",\r\n        \"I\",\r\n        \"J\",\r\n        \"K\",\r\n        \"L\",\r\n        \"M\",\r\n        \"N\",\r\n        \"O\",\r\n        \"P\",\r\n        \"R\",\r\n        \"S\",\r\n        \"T\",\r\n        \"U\",\r\n        \"V\",\r\n        \"W\",\r\n        \"X\",\r\n        \"Y\",\r\n        \"Z\",\r\n      ];\r\n      const [selectedAlphabet, setSelectedAlphabet] = useState(null);\r\n    \r\n      const handleClick = (alphabet) => {\r\n        setSelectedAlphabet(alphabet);\r\n      \r\n        console.log(\"Selected alphabet:\", alphabet);\r\n        global.alphabets=alphabet;\r\n        console.log(global.alphabets);\r\n      };\r\n      const [result, setResult] = useState([]);\r\n      const [open, setOpen] = React.useState(false);\r\n      const [first, setFirst] = useState(\"\");\r\n      const [word, setWord] = useState(\"\");\r\n      const [isValueSelected, setIsValueSelected] = useState(false);\r\n      function handleChange(e) {\r\n        setWord(e.target.value);\r\n      } \r\n  return (\r\n    <div>\r\n    <div className=\"center\">\r\n      <div className=\"pagination\">\r\n        {items.map((item, index) => (\r\n          <a key={index} onClick={() => handleClick(item)}>\r\n            {item}\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    <Fragment>\r\n            <Autocomplete\r\n              id=\"users\"\r\n              defaultValue={null}\r\n              getOptionLabel={(result) => `${result.id} ${result.description}`}\r\n          options={result}\r\n              sx={{\r\n                width: \"140px\",\r\n                backgroundColor: \"white\",\r\n                mt: \"14px\",\r\n                ml: \"4px\",\r\n                display: \"inline-block\",\r\n                \"& input\": {\r\n                  height: \"5px\",\r\n                  bgcolor: \"background.paper\",\r\n                  color: (theme) =>\r\n                    theme.palette.getContrastText(\r\n                      theme.palette.background.paper\r\n                    ),\r\n                },\r\n              }}\r\n              isoptionequalToValue={(option, value) =>\r\n                option.description === value.description\r\n              }\r\n              noOptionsText={\"PLEASE ENTER VALID CODES\"}\r\n              open={open}\r\n              onInputChange={(_, value) => {\r\n                if (value.length === 0) {\r\n                  if (open) setOpen(false);\r\n                } else {\r\n                  if (!open) setOpen(true);\r\n                }\r\n              }}\r\n              onClose={() => setOpen(false)}\r\n              popupIcon={\r\n                <SearchIcon sx={{ marginLeft:\"60px\" }} />\r\n              }\r\n              onChange={(event, newValue) => {\r\n                setFirst(newValue);\r\n                setIsValueSelected(true);\r\n              }}\r\n              autoSelect\r\n              renderOption={(props, result) => (\r\n                <Box {...props} key={result.id}>\r\n                  {result.id} {result.description}\r\n                </Box>\r\n              )}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  onChange={handleChange}\r\n                  placeholder=\"filter\"\r\n                />\r\n              )}\r\n            />\r\n          </Fragment>\r\n    <div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IndexTables;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}